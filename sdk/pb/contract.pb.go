// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: contract.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SmartContractEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol       string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractID   string `protobuf:"bytes,2,opt,name=contractID,proto3" json:"contractID,omitempty"`
	ContractName string `protobuf:"bytes,3,opt,name=contractName,proto3" json:"contractName,omitempty"`
	ContractAddr string `protobuf:"bytes,4,opt,name=contractAddr,proto3" json:"contractAddr,omitempty"`
	Event        string `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
	Value        string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SmartContractEvent) Reset() {
	*x = SmartContractEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractEvent) ProtoMessage() {}

func (x *SmartContractEvent) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractEvent.ProtoReflect.Descriptor instead.
func (*SmartContractEvent) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{0}
}

func (x *SmartContractEvent) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SmartContractEvent) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *SmartContractEvent) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *SmartContractEvent) GetContractAddr() string {
	if x != nil {
		return x.ContractAddr
	}
	return ""
}

func (x *SmartContractEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *SmartContractEvent) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ReceiptResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppID        string                `protobuf:"bytes,2,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID     string                `protobuf:"bytes,3,opt,name=walletID,proto3" json:"walletID,omitempty"`
	AccountID    string                `protobuf:"bytes,4,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Sid          string                `protobuf:"bytes,5,opt,name=sid,proto3" json:"sid,omitempty"`
	TxID         string                `protobuf:"bytes,6,opt,name=txID,proto3" json:"txID,omitempty"`
	WxID         string                `protobuf:"bytes,7,opt,name=wxID,proto3" json:"wxID,omitempty"`
	FromAddress  string                `protobuf:"bytes,8,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress    string                `protobuf:"bytes,9,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Value        string                `protobuf:"bytes,10,opt,name=value,proto3" json:"value,omitempty"`
	Fees         string                `protobuf:"bytes,11,opt,name=fees,proto3" json:"fees,omitempty"`
	Symbol       string                `protobuf:"bytes,12,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractID   string                `protobuf:"bytes,13,opt,name=contractID,proto3" json:"contractID,omitempty"`
	ContractName string                `protobuf:"bytes,14,opt,name=contractName,proto3" json:"contractName,omitempty"`
	ContractAddr string                `protobuf:"bytes,15,opt,name=contractAddr,proto3" json:"contractAddr,omitempty"`
	BlockHash    string                `protobuf:"bytes,16,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockHeight  int64                 `protobuf:"varint,17,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	IsMain       int64                 `protobuf:"varint,18,opt,name=isMain,proto3" json:"isMain,omitempty"`
	Applytime    int64                 `protobuf:"varint,19,opt,name=applytime,proto3" json:"applytime,omitempty"`
	Succtime     int64                 `protobuf:"varint,20,opt,name=succtime,proto3" json:"succtime,omitempty"`
	Dealstate    int64                 `protobuf:"varint,21,opt,name=dealstate,proto3" json:"dealstate,omitempty"`
	Notifystate  int64                 `protobuf:"varint,22,opt,name=notifystate,proto3" json:"notifystate,omitempty"`
	Success      string                `protobuf:"bytes,23,opt,name=success,proto3" json:"success,omitempty"`
	RawReceipt   string                `protobuf:"bytes,24,opt,name=rawReceipt,proto3" json:"rawReceipt,omitempty"`
	Events       []*SmartContractEvent `protobuf:"bytes,25,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ReceiptResult) Reset() {
	*x = ReceiptResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptResult) ProtoMessage() {}

func (x *ReceiptResult) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptResult.ProtoReflect.Descriptor instead.
func (*ReceiptResult) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{1}
}

func (x *ReceiptResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReceiptResult) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ReceiptResult) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *ReceiptResult) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *ReceiptResult) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *ReceiptResult) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *ReceiptResult) GetWxID() string {
	if x != nil {
		return x.WxID
	}
	return ""
}

func (x *ReceiptResult) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *ReceiptResult) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *ReceiptResult) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReceiptResult) GetFees() string {
	if x != nil {
		return x.Fees
	}
	return ""
}

func (x *ReceiptResult) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReceiptResult) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *ReceiptResult) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *ReceiptResult) GetContractAddr() string {
	if x != nil {
		return x.ContractAddr
	}
	return ""
}

func (x *ReceiptResult) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *ReceiptResult) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *ReceiptResult) GetIsMain() int64 {
	if x != nil {
		return x.IsMain
	}
	return 0
}

func (x *ReceiptResult) GetApplytime() int64 {
	if x != nil {
		return x.Applytime
	}
	return 0
}

func (x *ReceiptResult) GetSucctime() int64 {
	if x != nil {
		return x.Succtime
	}
	return 0
}

func (x *ReceiptResult) GetDealstate() int64 {
	if x != nil {
		return x.Dealstate
	}
	return 0
}

func (x *ReceiptResult) GetNotifystate() int64 {
	if x != nil {
		return x.Notifystate
	}
	return 0
}

func (x *ReceiptResult) GetSuccess() string {
	if x != nil {
		return x.Success
	}
	return ""
}

func (x *ReceiptResult) GetRawReceipt() string {
	if x != nil {
		return x.RawReceipt
	}
	return ""
}

func (x *ReceiptResult) GetEvents() []*SmartContractEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type ContractResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ContractID string `protobuf:"bytes,2,opt,name=contractID,proto3" json:"contractID,omitempty"`
	Symbol     string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Decimals   int64  `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Address    string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Token      string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	Protocol   string `protobuf:"bytes,8,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Ctime      int64  `protobuf:"varint,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
}

func (x *ContractResult) Reset() {
	*x = ContractResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractResult) ProtoMessage() {}

func (x *ContractResult) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractResult.ProtoReflect.Descriptor instead.
func (*ContractResult) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{2}
}

func (x *ContractResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ContractResult) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *ContractResult) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ContractResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContractResult) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *ContractResult) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ContractResult) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ContractResult) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ContractResult) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

type GetContractsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	Symbol     string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractID string `protobuf:"bytes,3,opt,name=contractID,proto3" json:"contractID,omitempty"`
	LastID     int64  `protobuf:"varint,4,opt,name=lastID,proto3" json:"lastID,omitempty"`
	Limit      int64  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	PrevID     int64  `protobuf:"varint,6,opt,name=prevID,proto3" json:"prevID,omitempty"`
}

func (x *GetContractsReq) Reset() {
	*x = GetContractsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractsReq) ProtoMessage() {}

func (x *GetContractsReq) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractsReq.ProtoReflect.Descriptor instead.
func (*GetContractsReq) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{3}
}

func (x *GetContractsReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetContractsReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetContractsReq) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *GetContractsReq) GetLastID() int64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

func (x *GetContractsReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetContractsReq) GetPrevID() int64 {
	if x != nil {
		return x.PrevID
	}
	return 0
}

type GetContractsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ContractResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetContractsRes) Reset() {
	*x = GetContractsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContractsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractsRes) ProtoMessage() {}

func (x *GetContractsRes) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractsRes.ProtoReflect.Descriptor instead.
func (*GetContractsRes) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{4}
}

func (x *GetContractsRes) GetResult() []*ContractResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateSmartContractTradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string    `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	Symbol    string    `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Sid       string    `protobuf:"bytes,3,opt,name=sid,proto3" json:"sid,omitempty"`
	AccountID string    `protobuf:"bytes,4,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Coin      *CoinInfo `protobuf:"bytes,5,opt,name=coin,proto3" json:"coin,omitempty"`
	AbiParam  []string  `protobuf:"bytes,6,rep,name=abiParam,proto3" json:"abiParam,omitempty"`
	Raw       string    `protobuf:"bytes,7,opt,name=raw,proto3" json:"raw,omitempty"`
	RawType   int64     `protobuf:"varint,8,opt,name=rawType,proto3" json:"rawType,omitempty"`
	FeeRate   string    `protobuf:"bytes,9,opt,name=feeRate,proto3" json:"feeRate,omitempty"`
	Value     string    `protobuf:"bytes,10,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateSmartContractTradeReq) Reset() {
	*x = CreateSmartContractTradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSmartContractTradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSmartContractTradeReq) ProtoMessage() {}

func (x *CreateSmartContractTradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSmartContractTradeReq.ProtoReflect.Descriptor instead.
func (*CreateSmartContractTradeReq) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSmartContractTradeReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateSmartContractTradeReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateSmartContractTradeReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *CreateSmartContractTradeReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *CreateSmartContractTradeReq) GetCoin() *CoinInfo {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *CreateSmartContractTradeReq) GetAbiParam() []string {
	if x != nil {
		return x.AbiParam
	}
	return nil
}

func (x *CreateSmartContractTradeReq) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *CreateSmartContractTradeReq) GetRawType() int64 {
	if x != nil {
		return x.RawType
	}
	return 0
}

func (x *CreateSmartContractTradeReq) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

func (x *CreateSmartContractTradeReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CreateSmartContractTradeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawTx []byte `protobuf:"bytes,1,opt,name=rawTx,proto3" json:"rawTx,omitempty"`
}

func (x *CreateSmartContractTradeRes) Reset() {
	*x = CreateSmartContractTradeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSmartContractTradeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSmartContractTradeRes) ProtoMessage() {}

func (x *CreateSmartContractTradeRes) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSmartContractTradeRes.ProtoReflect.Descriptor instead.
func (*CreateSmartContractTradeRes) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSmartContractTradeRes) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

type SubmitSmartContractTradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	RawTx []byte `protobuf:"bytes,2,opt,name=rawTx,proto3" json:"rawTx,omitempty"`
}

func (x *SubmitSmartContractTradeReq) Reset() {
	*x = SubmitSmartContractTradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitSmartContractTradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSmartContractTradeReq) ProtoMessage() {}

func (x *SubmitSmartContractTradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSmartContractTradeReq.ProtoReflect.Descriptor instead.
func (*SubmitSmartContractTradeReq) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitSmartContractTradeReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *SubmitSmartContractTradeReq) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

type SubmitSmartContractTradeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []byte `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SubmitSmartContractTradeRes) Reset() {
	*x = SubmitSmartContractTradeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitSmartContractTradeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSmartContractTradeRes) ProtoMessage() {}

func (x *SubmitSmartContractTradeRes) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSmartContractTradeRes.ProtoReflect.Descriptor instead.
func (*SubmitSmartContractTradeRes) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{8}
}

func (x *SubmitSmartContractTradeRes) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

type CallSmartContractABIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string    `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	AccountID string    `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Coin      *CoinInfo `protobuf:"bytes,3,opt,name=coin,proto3" json:"coin,omitempty"`
	AbiParam  []string  `protobuf:"bytes,4,rep,name=abiParam,proto3" json:"abiParam,omitempty"`
	Raw       string    `protobuf:"bytes,5,opt,name=raw,proto3" json:"raw,omitempty"`
	RawType   int64     `protobuf:"varint,6,opt,name=rawType,proto3" json:"rawType,omitempty"`
}

func (x *CallSmartContractABIReq) Reset() {
	*x = CallSmartContractABIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallSmartContractABIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallSmartContractABIReq) ProtoMessage() {}

func (x *CallSmartContractABIReq) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallSmartContractABIReq.ProtoReflect.Descriptor instead.
func (*CallSmartContractABIReq) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{9}
}

func (x *CallSmartContractABIReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CallSmartContractABIReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *CallSmartContractABIReq) GetCoin() *CoinInfo {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *CallSmartContractABIReq) GetAbiParam() []string {
	if x != nil {
		return x.AbiParam
	}
	return nil
}

func (x *CallSmartContractABIReq) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *CallSmartContractABIReq) GetRawType() int64 {
	if x != nil {
		return x.RawType
	}
	return 0
}

type CallSmartContractABIRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method    string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	RawHex    string `protobuf:"bytes,3,opt,name=rawHex,proto3" json:"rawHex,omitempty"`
	Status    int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Exception string `protobuf:"bytes,5,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *CallSmartContractABIRes) Reset() {
	*x = CallSmartContractABIRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallSmartContractABIRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallSmartContractABIRes) ProtoMessage() {}

func (x *CallSmartContractABIRes) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallSmartContractABIRes.ProtoReflect.Descriptor instead.
func (*CallSmartContractABIRes) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{10}
}

func (x *CallSmartContractABIRes) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CallSmartContractABIRes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CallSmartContractABIRes) GetRawHex() string {
	if x != nil {
		return x.RawHex
	}
	return ""
}

func (x *CallSmartContractABIRes) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CallSmartContractABIRes) GetException() string {
	if x != nil {
		return x.Exception
	}
	return ""
}

type FindSmartContractReceiptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID         string `protobuf:"bytes,1,opt,name=txID,proto3" json:"txID,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractID   string `protobuf:"bytes,3,opt,name=contractID,proto3" json:"contractID,omitempty"`
	ContractAddr string `protobuf:"bytes,4,opt,name=contractAddr,proto3" json:"contractAddr,omitempty"`
	Address      string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Limit        int64  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	LastID       int64  `protobuf:"varint,7,opt,name=lastID,proto3" json:"lastID,omitempty"`
	Type         int64  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	AppID        string `protobuf:"bytes,9,opt,name=appID,proto3" json:"appID,omitempty"`
	PrevID       int64  `protobuf:"varint,10,opt,name=prevID,proto3" json:"prevID,omitempty"`
}

func (x *FindSmartContractReceiptReq) Reset() {
	*x = FindSmartContractReceiptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSmartContractReceiptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSmartContractReceiptReq) ProtoMessage() {}

func (x *FindSmartContractReceiptReq) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSmartContractReceiptReq.ProtoReflect.Descriptor instead.
func (*FindSmartContractReceiptReq) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{11}
}

func (x *FindSmartContractReceiptReq) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *FindSmartContractReceiptReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *FindSmartContractReceiptReq) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *FindSmartContractReceiptReq) GetContractAddr() string {
	if x != nil {
		return x.ContractAddr
	}
	return ""
}

func (x *FindSmartContractReceiptReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FindSmartContractReceiptReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindSmartContractReceiptReq) GetLastID() int64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

func (x *FindSmartContractReceiptReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FindSmartContractReceiptReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *FindSmartContractReceiptReq) GetPrevID() int64 {
	if x != nil {
		return x.PrevID
	}
	return 0
}

type FindSmartContractReceiptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ReceiptResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *FindSmartContractReceiptRes) Reset() {
	*x = FindSmartContractReceiptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSmartContractReceiptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSmartContractReceiptRes) ProtoMessage() {}

func (x *FindSmartContractReceiptRes) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSmartContractReceiptRes.ProtoReflect.Descriptor instead.
func (*FindSmartContractReceiptRes) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{12}
}

func (x *FindSmartContractReceiptRes) GetResult() []*ReceiptResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type FollowSmartContractReceiptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID           string   `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	FollowContracts []string `protobuf:"bytes,2,rep,name=followContracts,proto3" json:"followContracts,omitempty"`
	Type            int64    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` // 0.默认全量订阅 1.增量订阅 2.删除指定订阅
}

func (x *FollowSmartContractReceiptReq) Reset() {
	*x = FollowSmartContractReceiptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowSmartContractReceiptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowSmartContractReceiptReq) ProtoMessage() {}

func (x *FollowSmartContractReceiptReq) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowSmartContractReceiptReq.ProtoReflect.Descriptor instead.
func (*FollowSmartContractReceiptReq) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{13}
}

func (x *FollowSmartContractReceiptReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *FollowSmartContractReceiptReq) GetFollowContracts() []string {
	if x != nil {
		return x.FollowContracts
	}
	return nil
}

func (x *FollowSmartContractReceiptReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type FollowSmartContractReceiptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FollowSmartContractReceiptRes) Reset() {
	*x = FollowSmartContractReceiptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowSmartContractReceiptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowSmartContractReceiptRes) ProtoMessage() {}

func (x *FollowSmartContractReceiptRes) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowSmartContractReceiptRes.ProtoReflect.Descriptor instead.
func (*FollowSmartContractReceiptRes) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{14}
}

func (x *FollowSmartContractReceiptRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_contract_proto protoreflect.FileDescriptor

var file_contract_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd4, 0x05, 0x0a, 0x0d, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x78, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x77, 0x78, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x65, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x63, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x63, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xea, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa5, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x76, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x62, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x62, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61,
	0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x22, 0x49, 0x0a, 0x1b, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x22, 0x35, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbc, 0x01,
	0x0a, 0x17, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x42, 0x49, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x62, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x61, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x17, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x42, 0x49, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x77, 0x48, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x77, 0x48, 0x65, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x02, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x44, 0x22, 0x4d,
	0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x73, 0x0a,
	0x1d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x37, 0x0a, 0x1d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xe3, 0x04, 0x0a, 0x0f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x14, 0x43, 0x61, 0x6c,
	0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x42,
	0x49, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x42, 0x49,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x42, 0x49, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x1a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12,
	0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contract_proto_rawDescOnce sync.Once
	file_contract_proto_rawDescData = file_contract_proto_rawDesc
)

func file_contract_proto_rawDescGZIP() []byte {
	file_contract_proto_rawDescOnce.Do(func() {
		file_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_contract_proto_rawDescData)
	})
	return file_contract_proto_rawDescData
}

var file_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_contract_proto_goTypes = []interface{}{
	(*SmartContractEvent)(nil),            // 0: service.SmartContractEvent
	(*ReceiptResult)(nil),                 // 1: service.ReceiptResult
	(*ContractResult)(nil),                // 2: service.ContractResult
	(*GetContractsReq)(nil),               // 3: service.GetContractsReq
	(*GetContractsRes)(nil),               // 4: service.GetContractsRes
	(*CreateSmartContractTradeReq)(nil),   // 5: service.CreateSmartContractTradeReq
	(*CreateSmartContractTradeRes)(nil),   // 6: service.CreateSmartContractTradeRes
	(*SubmitSmartContractTradeReq)(nil),   // 7: service.SubmitSmartContractTradeReq
	(*SubmitSmartContractTradeRes)(nil),   // 8: service.SubmitSmartContractTradeRes
	(*CallSmartContractABIReq)(nil),       // 9: service.CallSmartContractABIReq
	(*CallSmartContractABIRes)(nil),       // 10: service.CallSmartContractABIRes
	(*FindSmartContractReceiptReq)(nil),   // 11: service.FindSmartContractReceiptReq
	(*FindSmartContractReceiptRes)(nil),   // 12: service.FindSmartContractReceiptRes
	(*FollowSmartContractReceiptReq)(nil), // 13: service.FollowSmartContractReceiptReq
	(*FollowSmartContractReceiptRes)(nil), // 14: service.FollowSmartContractReceiptRes
	(*CoinInfo)(nil),                      // 15: service.CoinInfo
}
var file_contract_proto_depIdxs = []int32{
	0,  // 0: service.ReceiptResult.events:type_name -> service.SmartContractEvent
	2,  // 1: service.GetContractsRes.result:type_name -> service.ContractResult
	15, // 2: service.CreateSmartContractTradeReq.coin:type_name -> service.CoinInfo
	15, // 3: service.CallSmartContractABIReq.coin:type_name -> service.CoinInfo
	1,  // 4: service.FindSmartContractReceiptRes.result:type_name -> service.ReceiptResult
	3,  // 5: service.ContractService.GetContracts:input_type -> service.GetContractsReq
	5,  // 6: service.ContractService.CreateSmartContractTrade:input_type -> service.CreateSmartContractTradeReq
	7,  // 7: service.ContractService.SubmitSmartContractTrade:input_type -> service.SubmitSmartContractTradeReq
	9,  // 8: service.ContractService.CallSmartContractABI:input_type -> service.CallSmartContractABIReq
	11, // 9: service.ContractService.FindSmartContractReceipt:input_type -> service.FindSmartContractReceiptReq
	13, // 10: service.ContractService.FollowSmartContractReceipt:input_type -> service.FollowSmartContractReceiptReq
	4,  // 11: service.ContractService.GetContracts:output_type -> service.GetContractsRes
	6,  // 12: service.ContractService.CreateSmartContractTrade:output_type -> service.CreateSmartContractTradeRes
	8,  // 13: service.ContractService.SubmitSmartContractTrade:output_type -> service.SubmitSmartContractTradeRes
	10, // 14: service.ContractService.CallSmartContractABI:output_type -> service.CallSmartContractABIRes
	12, // 15: service.ContractService.FindSmartContractReceipt:output_type -> service.FindSmartContractReceiptRes
	14, // 16: service.ContractService.FollowSmartContractReceipt:output_type -> service.FollowSmartContractReceiptRes
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_contract_proto_init() }
func file_contract_proto_init() {
	if File_contract_proto != nil {
		return
	}
	file_trade_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContractsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSmartContractTradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSmartContractTradeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitSmartContractTradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitSmartContractTradeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallSmartContractABIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallSmartContractABIRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSmartContractReceiptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSmartContractReceiptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowSmartContractReceiptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowSmartContractReceiptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contract_proto_goTypes,
		DependencyIndexes: file_contract_proto_depIdxs,
		MessageInfos:      file_contract_proto_msgTypes,
	}.Build()
	File_contract_proto = out.File
	file_contract_proto_rawDesc = nil
	file_contract_proto_goTypes = nil
	file_contract_proto_depIdxs = nil
}
