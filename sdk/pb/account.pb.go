// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: account.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WalletResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppID        string `protobuf:"bytes,2,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID     string `protobuf:"bytes,3,opt,name=walletID,proto3" json:"walletID,omitempty"`
	RootPath     string `protobuf:"bytes,4,opt,name=rootPath,proto3" json:"rootPath,omitempty"`
	Alias        string `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	AccountIndex int64  `protobuf:"varint,6,opt,name=accountIndex,proto3" json:"accountIndex,omitempty"`
	Ctime        int64  `protobuf:"varint,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
}

func (x *WalletResult) Reset() {
	*x = WalletResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletResult) ProtoMessage() {}

func (x *WalletResult) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletResult.ProtoReflect.Descriptor instead.
func (*WalletResult) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{0}
}

func (x *WalletResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WalletResult) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *WalletResult) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *WalletResult) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *WalletResult) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *WalletResult) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *WalletResult) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

type AccountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppID          string   `protobuf:"bytes,2,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID       string   `protobuf:"bytes,3,opt,name=walletID,proto3" json:"walletID,omitempty"`
	AccountID      string   `protobuf:"bytes,4,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Alias          string   `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	MainSymbol     string   `protobuf:"bytes,6,opt,name=mainSymbol,proto3" json:"mainSymbol,omitempty"`
	OtherOwnerKeys []string `protobuf:"bytes,7,rep,name=otherOwnerKeys,proto3" json:"otherOwnerKeys,omitempty"`
	ReqSigs        int64    `protobuf:"varint,8,opt,name=reqSigs,proto3" json:"reqSigs,omitempty"`
	IsTrust        int64    `protobuf:"varint,9,opt,name=isTrust,proto3" json:"isTrust,omitempty"`
	PublicKey      string   `protobuf:"bytes,10,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	HdPath         string   `protobuf:"bytes,11,opt,name=hdPath,proto3" json:"hdPath,omitempty"`
	AccountIndex   int64    `protobuf:"varint,12,opt,name=accountIndex,proto3" json:"accountIndex,omitempty"`
	AddressIndex   int64    `protobuf:"varint,13,opt,name=addressIndex,proto3" json:"addressIndex,omitempty"`
	Ctime          int64    `protobuf:"varint,14,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Remark         string   `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AccountResult) Reset() {
	*x = AccountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResult) ProtoMessage() {}

func (x *AccountResult) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResult.ProtoReflect.Descriptor instead.
func (*AccountResult) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{1}
}

func (x *AccountResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountResult) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AccountResult) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *AccountResult) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *AccountResult) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AccountResult) GetMainSymbol() string {
	if x != nil {
		return x.MainSymbol
	}
	return ""
}

func (x *AccountResult) GetOtherOwnerKeys() []string {
	if x != nil {
		return x.OtherOwnerKeys
	}
	return nil
}

func (x *AccountResult) GetReqSigs() int64 {
	if x != nil {
		return x.ReqSigs
	}
	return 0
}

func (x *AccountResult) GetIsTrust() int64 {
	if x != nil {
		return x.IsTrust
	}
	return 0
}

func (x *AccountResult) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *AccountResult) GetHdPath() string {
	if x != nil {
		return x.HdPath
	}
	return ""
}

func (x *AccountResult) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *AccountResult) GetAddressIndex() int64 {
	if x != nil {
		return x.AddressIndex
	}
	return 0
}

func (x *AccountResult) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *AccountResult) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AddressResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppID      string `protobuf:"bytes,2,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID   string `protobuf:"bytes,3,opt,name=walletID,proto3" json:"walletID,omitempty"`
	AccountID  string `protobuf:"bytes,4,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Alias      string `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	MainSymbol string `protobuf:"bytes,6,opt,name=mainSymbol,proto3" json:"mainSymbol,omitempty"`
	AddrIndex  int64  `protobuf:"varint,7,opt,name=addrIndex,proto3" json:"addrIndex,omitempty"`
	Address    string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	IsMemo     int64  `protobuf:"varint,9,opt,name=isMemo,proto3" json:"isMemo,omitempty"`
	Memo       string `protobuf:"bytes,10,opt,name=memo,proto3" json:"memo,omitempty"`
	WatchOnly  int64  `protobuf:"varint,11,opt,name=watchOnly,proto3" json:"watchOnly,omitempty"`
	PublicKey  string `protobuf:"bytes,12,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	HdPath     string `protobuf:"bytes,13,opt,name=hdPath,proto3" json:"hdPath,omitempty"`
	Ctime      int64  `protobuf:"varint,14,opt,name=ctime,proto3" json:"ctime,omitempty"`
}

func (x *AddressResult) Reset() {
	*x = AddressResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressResult) ProtoMessage() {}

func (x *AddressResult) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressResult.ProtoReflect.Descriptor instead.
func (*AddressResult) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{2}
}

func (x *AddressResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddressResult) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AddressResult) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *AddressResult) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *AddressResult) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AddressResult) GetMainSymbol() string {
	if x != nil {
		return x.MainSymbol
	}
	return ""
}

func (x *AddressResult) GetAddrIndex() int64 {
	if x != nil {
		return x.AddrIndex
	}
	return 0
}

func (x *AddressResult) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressResult) GetIsMemo() int64 {
	if x != nil {
		return x.IsMemo
	}
	return 0
}

func (x *AddressResult) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *AddressResult) GetWatchOnly() int64 {
	if x != nil {
		return x.WatchOnly
	}
	return 0
}

func (x *AddressResult) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *AddressResult) GetHdPath() string {
	if x != nil {
		return x.HdPath
	}
	return ""
}

func (x *AddressResult) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

type BalanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppID            string `protobuf:"bytes,2,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID         string `protobuf:"bytes,3,opt,name=walletID,proto3" json:"walletID,omitempty"`
	AccountID        string `protobuf:"bytes,4,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Address          string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	MainSymbol       string `protobuf:"bytes,6,opt,name=mainSymbol,proto3" json:"mainSymbol,omitempty"`
	Symbol           string `protobuf:"bytes,7,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractID       string `protobuf:"bytes,8,opt,name=contractID,proto3" json:"contractID,omitempty"`
	ContractAddr     string `protobuf:"bytes,9,opt,name=contractAddr,proto3" json:"contractAddr,omitempty"`
	Balance          string `protobuf:"bytes,10,opt,name=balance,proto3" json:"balance,omitempty"`
	ConfirmBalance   string `protobuf:"bytes,11,opt,name=confirmBalance,proto3" json:"confirmBalance,omitempty"`
	UnconfirmBalance string `protobuf:"bytes,12,opt,name=unconfirmBalance,proto3" json:"unconfirmBalance,omitempty"`
	Utime            int64  `protobuf:"varint,13,opt,name=utime,proto3" json:"utime,omitempty"`
	ContractToken    string `protobuf:"bytes,14,opt,name=contractToken,proto3" json:"contractToken,omitempty"`
}

func (x *BalanceResult) Reset() {
	*x = BalanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResult) ProtoMessage() {}

func (x *BalanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResult.ProtoReflect.Descriptor instead.
func (*BalanceResult) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{3}
}

func (x *BalanceResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BalanceResult) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *BalanceResult) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *BalanceResult) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *BalanceResult) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BalanceResult) GetMainSymbol() string {
	if x != nil {
		return x.MainSymbol
	}
	return ""
}

func (x *BalanceResult) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BalanceResult) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *BalanceResult) GetContractAddr() string {
	if x != nil {
		return x.ContractAddr
	}
	return ""
}

func (x *BalanceResult) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *BalanceResult) GetConfirmBalance() string {
	if x != nil {
		return x.ConfirmBalance
	}
	return ""
}

func (x *BalanceResult) GetUnconfirmBalance() string {
	if x != nil {
		return x.UnconfirmBalance
	}
	return ""
}

func (x *BalanceResult) GetUtime() int64 {
	if x != nil {
		return x.Utime
	}
	return 0
}

func (x *BalanceResult) GetContractToken() string {
	if x != nil {
		return x.ContractToken
	}
	return ""
}

type CreateAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID          string   `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID       string   `protobuf:"bytes,2,opt,name=walletID,proto3" json:"walletID,omitempty"`
	Alias          string   `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Symbol         string   `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OtherOwnerKeys []string `protobuf:"bytes,5,rep,name=otherOwnerKeys,proto3" json:"otherOwnerKeys,omitempty"`
	ReqSigs        int64    `protobuf:"varint,6,opt,name=reqSigs,proto3" json:"reqSigs,omitempty"`
	IsTrust        int64    `protobuf:"varint,7,opt,name=isTrust,proto3" json:"isTrust,omitempty"`
	PublicKey      string   `protobuf:"bytes,8,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Password       string   `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	AccountIndex   int64    `protobuf:"varint,10,opt,name=accountIndex,proto3" json:"accountIndex,omitempty"`
	AccountID      string   `protobuf:"bytes,11,opt,name=accountID,proto3" json:"accountID,omitempty"`
	HdPath         string   `protobuf:"bytes,12,opt,name=hdPath,proto3" json:"hdPath,omitempty"`
	Remark         string   `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`
	OnlyAccount    int64    `protobuf:"varint,14,opt,name=onlyAccount,proto3" json:"onlyAccount,omitempty"`
}

func (x *CreateAccountReq) Reset() {
	*x = CreateAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountReq) ProtoMessage() {}

func (x *CreateAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountReq.ProtoReflect.Descriptor instead.
func (*CreateAccountReq) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAccountReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateAccountReq) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *CreateAccountReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *CreateAccountReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateAccountReq) GetOtherOwnerKeys() []string {
	if x != nil {
		return x.OtherOwnerKeys
	}
	return nil
}

func (x *CreateAccountReq) GetReqSigs() int64 {
	if x != nil {
		return x.ReqSigs
	}
	return 0
}

func (x *CreateAccountReq) GetIsTrust() int64 {
	if x != nil {
		return x.IsTrust
	}
	return 0
}

func (x *CreateAccountReq) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *CreateAccountReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateAccountReq) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *CreateAccountReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *CreateAccountReq) GetHdPath() string {
	if x != nil {
		return x.HdPath
	}
	return ""
}

func (x *CreateAccountReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateAccountReq) GetOnlyAccount() int64 {
	if x != nil {
		return x.OnlyAccount
	}
	return 0
}

type CreateAccountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   *AccountResult   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`     // *OwAccount
	Addresses []*AddressResult `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"` // []*Owaddress
}

func (x *CreateAccountRes) Reset() {
	*x = CreateAccountRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRes) ProtoMessage() {}

func (x *CreateAccountRes) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRes.ProtoReflect.Descriptor instead.
func (*CreateAccountRes) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAccountRes) GetAccount() *AccountResult {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CreateAccountRes) GetAddresses() []*AddressResult {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type FindAccountByAccountIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	AccountID string `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Symbol    string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *FindAccountByAccountIDReq) Reset() {
	*x = FindAccountByAccountIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAccountByAccountIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountByAccountIDReq) ProtoMessage() {}

func (x *FindAccountByAccountIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountByAccountIDReq.ProtoReflect.Descriptor instead.
func (*FindAccountByAccountIDReq) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{6}
}

func (x *FindAccountByAccountIDReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *FindAccountByAccountIDReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *FindAccountByAccountIDReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type FindAccountByAccountIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountResult `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // *OwAccount
}

func (x *FindAccountByAccountIDRes) Reset() {
	*x = FindAccountByAccountIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAccountByAccountIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountByAccountIDRes) ProtoMessage() {}

func (x *FindAccountByAccountIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountByAccountIDRes.ProtoReflect.Descriptor instead.
func (*FindAccountByAccountIDRes) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{7}
}

func (x *FindAccountByAccountIDRes) GetAccount() *AccountResult {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetBalanceByAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	AccountID  string `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Symbol     string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractID string `protobuf:"bytes,4,opt,name=contractID,proto3" json:"contractID,omitempty"`
}

func (x *GetBalanceByAccountReq) Reset() {
	*x = GetBalanceByAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceByAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceByAccountReq) ProtoMessage() {}

func (x *GetBalanceByAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceByAccountReq.ProtoReflect.Descriptor instead.
func (*GetBalanceByAccountReq) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{8}
}

func (x *GetBalanceByAccountReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetBalanceByAccountReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *GetBalanceByAccountReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetBalanceByAccountReq) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

type GetBalanceByAccountRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance *BalanceResult `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"` // *AccountBalance
}

func (x *GetBalanceByAccountRes) Reset() {
	*x = GetBalanceByAccountRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceByAccountRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceByAccountRes) ProtoMessage() {}

func (x *GetBalanceByAccountRes) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceByAccountRes.ProtoReflect.Descriptor instead.
func (*GetBalanceByAccountRes) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{9}
}

func (x *GetBalanceByAccountRes) GetBalance() *BalanceResult {
	if x != nil {
		return x.Balance
	}
	return nil
}

// method: getAccountBalanceList
type GetAccountBalanceListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID   string `protobuf:"bytes,2,opt,name=walletID,proto3" json:"walletID,omitempty"`
	AccountID  string `protobuf:"bytes,3,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Symbol     string `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractID string `protobuf:"bytes,5,opt,name=contractID,proto3" json:"contractID,omitempty"`
	Type       int64  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"` // 0.所有 1.主币 2.代币
	Limit      int64  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	LastID     int64  `protobuf:"varint,8,opt,name=lastID,proto3" json:"lastID,omitempty"`
	PrevID     int64  `protobuf:"varint,9,opt,name=prevID,proto3" json:"prevID,omitempty"`
}

func (x *GetAccountBalanceListReq) Reset() {
	*x = GetAccountBalanceListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountBalanceListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountBalanceListReq) ProtoMessage() {}

func (x *GetAccountBalanceListReq) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountBalanceListReq.ProtoReflect.Descriptor instead.
func (*GetAccountBalanceListReq) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{10}
}

func (x *GetAccountBalanceListReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetAccountBalanceListReq) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *GetAccountBalanceListReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *GetAccountBalanceListReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetAccountBalanceListReq) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *GetAccountBalanceListReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetAccountBalanceListReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAccountBalanceListReq) GetLastID() int64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

func (x *GetAccountBalanceListReq) GetPrevID() int64 {
	if x != nil {
		return x.PrevID
	}
	return 0
}

type GetAccountBalanceListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*BalanceResult `protobuf:"bytes,1,rep,name=Result,proto3" json:"Result,omitempty"` // *AccountBalance
}

func (x *GetAccountBalanceListRes) Reset() {
	*x = GetAccountBalanceListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountBalanceListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountBalanceListRes) ProtoMessage() {}

func (x *GetAccountBalanceListRes) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountBalanceListRes.ProtoReflect.Descriptor instead.
func (*GetAccountBalanceListRes) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{11}
}

func (x *GetAccountBalanceListRes) GetResult() []*BalanceResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type FindAccountByWalletIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID    string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	WalletID string `protobuf:"bytes,2,opt,name=walletID,proto3" json:"walletID,omitempty"`
	Symbol   string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	LastID   int64  `protobuf:"varint,4,opt,name=lastID,proto3" json:"lastID,omitempty"`
	Limit    int64  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	PrevID   int64  `protobuf:"varint,6,opt,name=prevID,proto3" json:"prevID,omitempty"`
}

func (x *FindAccountByWalletIDReq) Reset() {
	*x = FindAccountByWalletIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAccountByWalletIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountByWalletIDReq) ProtoMessage() {}

func (x *FindAccountByWalletIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountByWalletIDReq.ProtoReflect.Descriptor instead.
func (*FindAccountByWalletIDReq) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{12}
}

func (x *FindAccountByWalletIDReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *FindAccountByWalletIDReq) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *FindAccountByWalletIDReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *FindAccountByWalletIDReq) GetLastID() int64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

func (x *FindAccountByWalletIDReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindAccountByWalletIDReq) GetPrevID() int64 {
	if x != nil {
		return x.PrevID
	}
	return 0
}

type FindAccountByWalletIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*AccountResult `protobuf:"bytes,1,rep,name=Result,proto3" json:"Result,omitempty"` // []*OwAccount
}

func (x *FindAccountByWalletIDRes) Reset() {
	*x = FindAccountByWalletIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAccountByWalletIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountByWalletIDRes) ProtoMessage() {}

func (x *FindAccountByWalletIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountByWalletIDRes.ProtoReflect.Descriptor instead.
func (*FindAccountByWalletIDRes) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{13}
}

func (x *FindAccountByWalletIDRes) GetResult() []*AccountResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_account_proto protoreflect.FileDescriptor

var file_account_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xad, 0x03, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x53, 0x69,
	0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x71, 0x53, 0x69, 0x67,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xf3, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6d,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xaf, 0x03,
	0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x69, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x9c, 0x03, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x53, 0x69, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x53, 0x69, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7a,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x19, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x22, 0x4d, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x76, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x76, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xaa, 0x01, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x44, 0x22, 0x4a, 0x0a,
	0x18, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xda, 0x03, 0x0a, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x15, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_account_proto_rawDescOnce sync.Once
	file_account_proto_rawDescData = file_account_proto_rawDesc
)

func file_account_proto_rawDescGZIP() []byte {
	file_account_proto_rawDescOnce.Do(func() {
		file_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_proto_rawDescData)
	})
	return file_account_proto_rawDescData
}

var file_account_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_account_proto_goTypes = []interface{}{
	(*WalletResult)(nil),              // 0: service.WalletResult
	(*AccountResult)(nil),             // 1: service.AccountResult
	(*AddressResult)(nil),             // 2: service.AddressResult
	(*BalanceResult)(nil),             // 3: service.BalanceResult
	(*CreateAccountReq)(nil),          // 4: service.CreateAccountReq
	(*CreateAccountRes)(nil),          // 5: service.CreateAccountRes
	(*FindAccountByAccountIDReq)(nil), // 6: service.FindAccountByAccountIDReq
	(*FindAccountByAccountIDRes)(nil), // 7: service.FindAccountByAccountIDRes
	(*GetBalanceByAccountReq)(nil),    // 8: service.GetBalanceByAccountReq
	(*GetBalanceByAccountRes)(nil),    // 9: service.GetBalanceByAccountRes
	(*GetAccountBalanceListReq)(nil),  // 10: service.GetAccountBalanceListReq
	(*GetAccountBalanceListRes)(nil),  // 11: service.GetAccountBalanceListRes
	(*FindAccountByWalletIDReq)(nil),  // 12: service.FindAccountByWalletIDReq
	(*FindAccountByWalletIDRes)(nil),  // 13: service.FindAccountByWalletIDRes
}
var file_account_proto_depIdxs = []int32{
	1,  // 0: service.CreateAccountRes.account:type_name -> service.AccountResult
	2,  // 1: service.CreateAccountRes.addresses:type_name -> service.AddressResult
	1,  // 2: service.FindAccountByAccountIDRes.account:type_name -> service.AccountResult
	3,  // 3: service.GetBalanceByAccountRes.balance:type_name -> service.BalanceResult
	3,  // 4: service.GetAccountBalanceListRes.Result:type_name -> service.BalanceResult
	1,  // 5: service.FindAccountByWalletIDRes.Result:type_name -> service.AccountResult
	4,  // 6: service.AccountService.CreateAccount:input_type -> service.CreateAccountReq
	6,  // 7: service.AccountService.FindAccountByAccountID:input_type -> service.FindAccountByAccountIDReq
	12, // 8: service.AccountService.FindAccountByWalletID:input_type -> service.FindAccountByWalletIDReq
	8,  // 9: service.AccountService.GetBalanceByAccount:input_type -> service.GetBalanceByAccountReq
	10, // 10: service.AccountService.GetAccountBalanceList:input_type -> service.GetAccountBalanceListReq
	5,  // 11: service.AccountService.CreateAccount:output_type -> service.CreateAccountRes
	7,  // 12: service.AccountService.FindAccountByAccountID:output_type -> service.FindAccountByAccountIDRes
	13, // 13: service.AccountService.FindAccountByWalletID:output_type -> service.FindAccountByWalletIDRes
	9,  // 14: service.AccountService.GetBalanceByAccount:output_type -> service.GetBalanceByAccountRes
	11, // 15: service.AccountService.GetAccountBalanceList:output_type -> service.GetAccountBalanceListRes
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_account_proto_init() }
func file_account_proto_init() {
	if File_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAccountByAccountIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAccountByAccountIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceByAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceByAccountRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountBalanceListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountBalanceListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAccountByWalletIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAccountByWalletIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_account_proto_goTypes,
		DependencyIndexes: file_account_proto_depIdxs,
		MessageInfos:      file_account_proto_msgTypes,
	}.Build()
	File_account_proto = out.File
	file_account_proto_rawDesc = nil
	file_account_proto_goTypes = nil
	file_account_proto_depIdxs = nil
}
